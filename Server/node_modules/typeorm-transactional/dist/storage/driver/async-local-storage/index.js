"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsyncLocalStorageDriver = void 0;
var async_hooks_1 = require("async_hooks");
var Store = /** @class */ (function () {
    function Store() {
        // Ref: https://github.com/Jeff-Lewis/cls-hooked/blob/master/context.js#L24
        // AsyncLocalStorage behaves differently from cls-hooked, as it expects
        // store to be passed on each `.run` call. cls-hooked manages the storage
        // and it's layers for the user. This class replicates cls-hooked behavior.
        this.layers = [];
    }
    Object.defineProperty(Store.prototype, "active", {
        get: function () {
            return !!this.storage;
        },
        enumerable: false,
        configurable: true
    });
    Store.prototype.get = function (key) {
        var _a;
        return (_a = this.storage) === null || _a === void 0 ? void 0 : _a.get(key);
    };
    Store.prototype.set = function (key, value) {
        var _a;
        (_a = this.storage) === null || _a === void 0 ? void 0 : _a.set(key, value);
    };
    Store.prototype.enter = function () {
        // Ref: https://github.com/Jeff-Lewis/cls-hooked/blob/master/context.js#L184-L195
        var newStorage = new Map(this.storage);
        this.layers.push(this.storage);
        this.storage = newStorage;
        return newStorage;
    };
    Store.prototype.exit = function (storage) {
        // Ref: https://github.com/Jeff-Lewis/cls-hooked/blob/master/context.js#L197-L225
        var _a;
        if (this.storage === storage) {
            this.storage = (_a = this.layers.pop()) !== null && _a !== void 0 ? _a : new Map();
            return;
        }
        var index = this.layers.lastIndexOf(storage);
        if (index >= 0) {
            this.layers.splice(index, 1);
        }
    };
    return Store;
}());
var AsyncLocalStorageDriver = /** @class */ (function () {
    function AsyncLocalStorageDriver() {
        this.context = new async_hooks_1.AsyncLocalStorage();
    }
    Object.defineProperty(AsyncLocalStorageDriver.prototype, "active", {
        get: function () {
            return this.store.active;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AsyncLocalStorageDriver.prototype, "store", {
        get: function () {
            return this.context.getStore() || new Store();
        },
        enumerable: false,
        configurable: true
    });
    AsyncLocalStorageDriver.prototype.get = function (key) {
        var _a;
        return (_a = this.store) === null || _a === void 0 ? void 0 : _a.get(key);
    };
    AsyncLocalStorageDriver.prototype.set = function (key, value) {
        var _a;
        (_a = this.store) === null || _a === void 0 ? void 0 : _a.set(key, value);
    };
    AsyncLocalStorageDriver.prototype.run = function (cb) {
        return __awaiter(this, void 0, void 0, function () {
            var storage;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        storage = this.store.enter();
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, , 3, 4]);
                        return [4 /*yield*/, this.context.run(this.store, cb)];
                    case 2: return [2 /*return*/, _a.sent()];
                    case 3:
                        this.store.exit(storage);
                        return [7 /*endfinally*/];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return AsyncLocalStorageDriver;
}());
exports.AsyncLocalStorageDriver = AsyncLocalStorageDriver;
//# sourceMappingURL=index.js.map